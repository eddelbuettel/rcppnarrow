// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppNarrow.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// narrow_array_info
SEXP narrow_array_info(SEXP adptr);
RcppExport SEXP _RcppNarrow_narrow_array_info(SEXP adptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type adptr(adptrSEXP);
    rcpp_result_gen = Rcpp::wrap(narrow_array_info(adptr));
    return rcpp_result_gen;
END_RCPP
}
// describeArrowSchema
void describeArrowSchema(Rcpp::XPtr<ArrowSchema> ptr);
RcppExport SEXP _RcppNarrow_describeArrowSchema(SEXP ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<ArrowSchema> >::type ptr(ptrSEXP);
    describeArrowSchema(ptr);
    return R_NilValue;
END_RCPP
}
// describeArrowArray
void describeArrowArray(Rcpp::XPtr<ArrowArray> ptr);
RcppExport SEXP _RcppNarrow_describeArrowArray(SEXP ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<ArrowArray> >::type ptr(ptrSEXP);
    describeArrowArray(ptr);
    return R_NilValue;
END_RCPP
}
// print_uint64
void print_uint64(Rcpp::XPtr<ArrowArray> ptr);
RcppExport SEXP _RcppNarrow_print_uint64(SEXP ptrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<ArrowArray> >::type ptr(ptrSEXP);
    print_uint64(ptr);
    return R_NilValue;
END_RCPP
}
// extract_null_count
int extract_null_count(SEXP array_data_xptr);
RcppExport SEXP _RcppNarrow_extract_null_count(SEXP array_data_xptrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type array_data_xptr(array_data_xptrSEXP);
    rcpp_result_gen = Rcpp::wrap(extract_null_count(array_data_xptr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppNarrow_narrow_array_info", (DL_FUNC) &_RcppNarrow_narrow_array_info, 1},
    {"_RcppNarrow_describeArrowSchema", (DL_FUNC) &_RcppNarrow_describeArrowSchema, 1},
    {"_RcppNarrow_describeArrowArray", (DL_FUNC) &_RcppNarrow_describeArrowArray, 1},
    {"_RcppNarrow_print_uint64", (DL_FUNC) &_RcppNarrow_print_uint64, 1},
    {"_RcppNarrow_extract_null_count", (DL_FUNC) &_RcppNarrow_extract_null_count, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppNarrow(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
